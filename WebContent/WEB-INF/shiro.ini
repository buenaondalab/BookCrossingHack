[main]

# -------------------------------------------------------------------
#					 FILTERS DECLARATION 					           
# -------------------------------------------------------------------

# The default Filter instances available automatically are defined
# by the DefaultFilter enum and the enum’s name field is the name available for configuration.
# They are:

#anon	org.apache.shiro.web.filter.authc.AnonymousFilter
#authc	org.apache.shiro.web.filter.authc.FormAuthenticationFilter
#authcBasic	org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
#logout	org.apache.shiro.web.filter.authc.LogoutFilter
#noSessionCreation	org.apache.shiro.web.filter.session.NoSessionCreationFilter
#perms	org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
#port	org.apache.shiro.web.filter.authz.PortFilter
#rest	org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
#roles	org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
#ssl	org.apache.shiro.web.filter.authz.SslFilter
#user	org.apache.shiro.web.filter.authc.UserFilter

# login page
authc.loginUrl = login.html
# redirecting page after logout
logout.redirectUrl = index.html

# configure Shiro's default 'ssl' filter to be disabled while testing:
ssl.enabled = false
noSessionCreation.enabled = false

# ----------------------------------------------------------------
#						 SESSION PROPERTIES 
# ----------------------------------------------------------------

# Configure a native web-capable session manager to override the default servlet container-based one
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
# Configure Hazelcast as our Shiro CacheManager. Adding session capacity is as easy as adding Hazelcast nodes!
cacheManager = org.apache.shiro.hazelcast.cache.HazelcastCacheManager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO

# configure properties (like session timeout) here if desired
# session timeout set to 30 minutes
sessionManager.globalSessionTimeout = 1800000
# We have configured Hazelcast to enforce a TTL for the activeSessions Map. No need for Shiro to invalidate!
sessionManager.sessionValidationSchedulerEnabled = false
# Configure a SessionDAO and then set it:
sessionManager.sessionDAO = $sessionDAO

# Use the configured native session manager:
securityManager.sessionManager = $sessionManager
securityManager.cacheManager = $cacheManager





# -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------

[users]
admin = password, admin
user = uPassword, user

[urls]
/logout = logout
# Rest public API path
/rest/places/** = noSessionCreation
/rest/books/** = noSessionCreation
# Personal user page
# if stateless (noSessionCreation enabled) use basic authentication using https (authcBasic)
/myNomadLibrary/** = ssl, noSessionCreation, authc
